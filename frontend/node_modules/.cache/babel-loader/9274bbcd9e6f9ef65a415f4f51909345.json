{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lkb-t440p/DevMisc/courts/courts/src/components/User/UserLogin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form'; // components \n\nimport ButtonSubmit from '../shared/ButtonSubmit';\n\nconst UserLogin = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            ref: register({\n              required: true,\n              minLength: 6\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 29\n          }, this), errors.username && errors.username.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Username invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"password\",\n            ref: register({\n              required: true,\n              minLength: 8\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"password invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserLogin, \"iyH731LTjAbxnbpM16EGorBPneQ=\", false, function () {\n  return [useForm];\n});\n\n_c = UserLogin;\nexport default UserLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"sources":["/home/lkb-t440p/DevMisc/courts/courts/src/components/User/UserLogin.js"],"names":["React","useForm","ButtonSubmit","UserLogin","register","handleSubmit","errors","onSubmit","data","console","log","required","minLength","username","type","password"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCL,OAAO,EAAlD;;AACA,QAAMM,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI;AAAM,UAAA,QAAQ,EAAEH,YAAY,CAACE,QAAD,CAA5B;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEQ;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,GAAG,EAAEH,QAAQ,CAAC;AAAEO,cAAAA,QAAQ,EAAE,IAAZ;AAAkBC,cAAAA,SAAS,EAAE;AAA7B,aAAD;AAHjB;AAAA;AAAA;AAAA;AAAA,kBAFR,EAOSN,MAAM,CAACO,QAAP,IAAmBP,MAAM,CAACO,QAAP,CAAgBC,IAAhB,KAAyB,UAA5C,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARZ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAWQ;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,GAAG,EAAEV,QAAQ,CAAC;AAAEO,cAAAA,QAAQ,EAAE,IAAZ;AAAkBC,cAAAA,SAAS,EAAE;AAA7B,aAAD;AAHjB;AAAA;AAAA;AAAA;AAAA,kBAXR,EAgBSN,MAAM,CAACS,QAAP,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhB5B,eAiBI;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAjCD;;GAAMZ,S;UACyCF,O;;;KADzCE,S;AAmCN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport { useForm } from 'react-hook-form'\n// components \nimport ButtonSubmit from '../shared/ButtonSubmit'\n\nconst UserLogin = () => {\n    const { register, handleSubmit, errors } = useForm()\n    const onSubmit = data => console.log(data)\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col s6\">\n                <h1>Login</h1>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <label>Username:</label>\n                            <input \n                                type=\"text\" \n                                name=\"username\" \n                                ref={register({ required: true, minLength: 6 })} \n                            />\n                            {errors.username && errors.username.type === \"required\" && (\n                                <p>Username invalid</p>\n                            )}\n                        <label>Password:</label>\n                            <input \n                                type=\"text\" \n                                name=\"password\" \n                                ref={register({ required: true, minLength: 8 })} \n                            />\n                            {errors.password && <p>password invalid</p>}\n                        <input type=\"submit\"/>\n                    </form>    \n                    {/* <ButtonSubmit name=\"Login\"/> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserLogin\n"]},"metadata":{},"sourceType":"module"}