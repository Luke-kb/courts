{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lkb-t440p/DevMisc/courts/frontend/src/components/User/UserLogin.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst UserLogin = () => {\n  _s();\n\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => console.log(data); // console.log(errors)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        alignSelf: \"center\"\n      },\n      classame: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"username\",\n            type: \"text\",\n            ref: register({\n              required: {\n                value: true,\n                message: \"You must enter a username\"\n              },\n              pattern: {\n                value: /^[a-zA-Z0-9]{4,10}$/,\n                message: \"must use at least 4 characters\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: errors.username.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"text\",\n            ref: register({\n              required: {\n                value: true,\n                message: \"You must enter a password\"\n              },\n              pattern: {\n                value: /^[a-zA-Z0-9]{6,}$/i,\n                message: \"Must use at least 6 characters. Must be a combination of uppercase & lowercase letters and numbers\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: errors.password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn waves-effect waves-light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserLogin, \"CvCMr/aFHOfjpy7piEeMvygciec=\", false, function () {\n  return [useForm];\n});\n\n_c = UserLogin;\nexport default UserLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"sources":["/home/lkb-t440p/DevMisc/courts/frontend/src/components/User/UserLogin.js"],"names":["React","useForm","UserLogin","register","errors","handleSubmit","onSubmit","data","console","log","display","alignSelf","required","value","message","pattern","username","color","password"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,MAAqCJ,OAAO,EAAlD;;AACA,QAAMK,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B,CAFsB,CAItB;;;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAgC,IAAA,SAAS,EAAC,WAA1C;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAmC,MAAA,QAAQ,EAAC,KAA5C;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,QAAQ,EAAEN,YAAY,CAACC,QAAD,CAA5B;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,GAAG,EAAEH,QAAQ,CAAC;AACZS,cAAAA,QAAQ,EAAE;AACRC,gBAAAA,KAAK,EAAE,IADC;AAERC,gBAAAA,OAAO,EAAE;AAFD,eADE;AAKZC,cAAAA,OAAO,EAAE;AACPF,gBAAAA,KAAK,EAAE,qBADA;AAEPC,gBAAAA,OAAO,EAAE;AAFF;AALG,aAAD;AAHf;AAAA;AAAA;AAAA;AAAA,kBAFF,EAgBGV,MAAM,CAACY,QAAP,iBACC;AAAG,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAV;AAAA,sBAA6Bb,MAAM,CAACY,QAAP,CAAgBF;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF,eAoBE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,GAAG,EAAEX,QAAQ,CAAC;AACZS,cAAAA,QAAQ,EAAE;AACRC,gBAAAA,KAAK,EAAE,IADC;AAERC,gBAAAA,OAAO,EAAE;AAFD,eADE;AAKZC,cAAAA,OAAO,EAAE;AACPF,gBAAAA,KAAK,EAAE,oBADA;AAEPC,gBAAAA,OAAO,EACL;AAHK;AALG,aAAD;AAHf;AAAA;AAAA;AAAA;AAAA,kBApBF,EAmCGV,MAAM,CAACc,QAAP,iBACC;AAAG,YAAA,KAAK,EAAE;AAAED,cAAAA,KAAK,EAAE;AAAT,aAAV;AAAA,sBAA6Bb,MAAM,CAACc,QAAP,CAAgBJ;AAA7C;AAAA;AAAA;AAAA;AAAA,kBApCJ,eAsCE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD,CAvDD;;GAAMZ,S;UACuCD,O;;;KADvCC,S;AAyDN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst UserLogin = () => {\n  const { register, errors, handleSubmit } = useForm();\n  const onSubmit = (data) => console.log(data);\n\n  // console.log(errors)\n\n  return (\n    <div style={{ display: \"flex\"}} className=\"container\">\n      <div style={{alignSelf: \"center\"}} classame=\"row\">\n        <div className=\"col s6\">\n          <h1>Login</h1>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <label>Username:</label>\n            <input\n              name=\"username\"\n              type=\"text\"\n              ref={register({\n                required: {\n                  value: true,\n                  message: \"You must enter a username\",\n                },\n                pattern: {\n                  value: /^[a-zA-Z0-9]{4,10}$/,\n                  message: \"must use at least 4 characters\",\n                },\n              })}\n            />\n            {errors.username && (\n              <p style={{ color: \"red\" }}>{errors.username.message}</p>\n            )}\n            <label>Password:</label>\n            <input\n              name=\"password\"\n              type=\"text\"\n              ref={register({\n                required: {\n                  value: true,\n                  message: \"You must enter a password\",\n                },\n                pattern: {\n                  value: /^[a-zA-Z0-9]{6,}$/i,\n                  message:\n                    \"Must use at least 6 characters. Must be a combination of uppercase & lowercase letters and numbers\",\n                },\n              })}\n            />\n            {errors.password && (\n              <p style={{ color: \"red\" }}>{errors.password.message}</p>\n            )}\n            <input type=\"submit\" className=\"btn waves-effect waves-light\" />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserLogin;\n"]},"metadata":{},"sourceType":"module"}